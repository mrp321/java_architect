## 1.	什么是zookeeper？

* Apache ZooKeeper 是一个高可靠的分布式协调中间件。它是 Google Chubby 的一个开源实现


## 2.	zookeeper节点有哪些特性，什么时候使用什么特性的节点？

* zookeeper中节点类型按照持久化可以分为临时节点和持久节点;按照顺序性可分为顺序节点和无序节点.具体说明如下:
    * 持久节点:客户端与zookeeper断开连接后,该节点依旧存在.适合于需要保持数据持久存在的场景
    * 顺序节点:在创建节点的时候, zookeeper会给该节点名称进行顺序编号.适合于实现分布式锁.
    * 临时节点:客户端与zookeeper断开连接后, 该节点被删除.适合于实现服务注册中心
 

```java
public enum CreateMode {  
    /** 
     * 持久节点：节点创建后，会一直存在，不会因客户端会话失效而删除； 
     */  
    PERSISTENT (0, false, false),  
  
    /** 
     * 持久顺序节点：基本特性与持久节点一致，创建节点的过程中，zookeeper会在其名字后自动追加一个单调增长的数字后缀，作为新的节点名；  
     */  
    PERSISTENT_SEQUENTIAL (2, false, true),  
  
    /** 
     * 临时节点：客户端会话失效或连接关闭后，该节点会被自动删除，且不能再临时节点下面创建子节点，否则报如下错（org.apache.zookeeper.KeeperException$NoChildrenForEphemeralsException: KeeperErrorCode = NoChildrenForEphemerals for /node/child）； 
     */  
    EPHEMERAL (1, true, false),  
  
    /** 
     * 临时顺序节点：基本特性与临时节点一致，创建节点的过程中，zookeeper会在其名字后自动追加一个单调增长的数字后缀，作为新的节点名；  
     */  
    EPHEMERAL_SEQUENTIAL (3, true, true); 

    //...

```



## 3.	使用zookeeper实现服务注册中心，原理是什么？用到了zk的哪些特性？


* 原理:在zookeeper中，进行服务注册，实际上就是在zookeeper中创建了一个znode节点，该节点存储了该服务的IP、端口、调用方式(协议、序列化方式)等。该节点承担着最重要的职责，它由服务提供者(发布服务时)创建，以供服务消费者获取节点中的信息，从而定位到服务提供者真正网络拓扑位置以及得知如何调用。RPC服务注册、发现过程简述如下：
    * 服务提供者启动时，会将其服务名称，ip地址注册到配置中心。
    * 服务消费者在第一次调用服务时，会通过注册中心找到相应的服务的IP地址列表，并缓存到本地，以供后续使用。当消费者调用服务时，不会再去请求注册中心，而是直接通过负载均衡算法从IP列表中取一个服务提供者的服务器调用服务。
    * 当服务提供者的某台服务器宕机或下线时，相应的ip会从服务提供者IP列表中移除。同时，注册中心会将新的服务IP地址列表发送给服务消费者机器，缓存在消费者本机。
    * 当某个服务的所有服务器都下线了，那么这个服务也就下线了。
    * 同样，当服务提供者的某台服务器上线时，注册中心会将新的服务IP地址列表发送给服务消费者机器，缓存在消费者本机。
    * 服务提供方可以根据服务消费者的数量来作为服务下线的依据。
    
* 特性: 心跳检测/节点监听/分布式一致性

## 4.	自己动手搭建zookeeper集群，并且写一篇集群搭建的文章发表在文章专栏!(学会总结，是快速成长的关键）


* 具体操作参见:  [zookeeper的安装部署](https://gper.club/articles/7e7e7f7ff7g5dgc1g6f)